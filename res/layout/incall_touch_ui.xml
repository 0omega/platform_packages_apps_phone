<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2009 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- In-call onscreen touch UI elements, used on some platforms.

     This layout is a fullscreen overlay, drawn on top of the
     non-touch-sensitive parts of the in-call UI (i.e. the call card).

     The top-level View here is a FrameLayout with 2 children:
       (1) incomingCallWidget: the UI displayed while an incoming call is ringing
       (2) inCallControls: the widgets visible while a regular call (or calls) is in progress
     Exactly one of these is visible at any given moment.
     -->
<RelativeLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    >

    <!-- (1) incomingCallWidget: the UI displayed while an incoming call is ringing. -->
    <com.android.internal.widget.multiwaveview.MultiWaveView
        android:id="@+id/incomingCallWidget"
        android:layout_width="match_parent"
        android:layout_height="@dimen/upper_buttons_top_margin"
        android:layout_alignParentBottom="true"
        android:visibility="gone"

        android:targetDrawables="@array/incall_targets"
        android:targetDescriptions="@array/incall_target_descriptions"
        android:directionDescriptions="@array/incall_direction_descriptions"
        android:handleDrawable="@drawable/ic_in_call_touch_handle"
        android:waveDrawable="@*android:drawable/ic_lockscreen_outerring"
        android:outerRadius="@*android:dimen/multiwaveview_target_placement_radius"
        android:snapMargin="@*android:dimen/multiwaveview_snap_margin"
        android:hitRadius="@*android:dimen/multiwaveview_hit_radius"
        android:vibrationDuration="20"
        android:leftChevronDrawable="@*android:drawable/ic_lockscreen_chevron_left"
        android:rightChevronDrawable="@*android:drawable/ic_lockscreen_chevron_right"
        android:feedbackCount="3"
        android:horizontalOffset="0dip"
        android:verticalOffset="60dip"
        />

    <!--
        (2) inCallControls: the widgets visible while a regular call
        (or calls) is in progress
    -->
    <RelativeLayout android:id="@+id/inCallControls"
                    android:layout_width="match_parent"
                    android:layout_height="match_parent"
                    android:layout_alignParentTop="true"
                    android:visibility="gone"
                    android:animateLayoutChanges="true"
                    >

        <!-- DTMF dialpad shown in the upper part of the screen
             (above the main cluster of buttons.) -->
        <ViewStub android:id="@+id/dtmf_twelve_key_dialer_stub"
                  android:layout="@layout/dtmf_twelve_key_dialer_view"
                  android:layout_width="match_parent"
                  android:layout_height="match_parent"
                  android:layout_above="@+id/bottomButtons"
                  android:layout_marginBottom="@dimen/dialpad_vertical_margin" />

        <!-- Main cluster of onscreen buttons on the lower part of the screen. -->
        <LinearLayout android:id="@+id/bottomButtons"
                      android:orientation="vertical"
                      android:layout_width="match_parent"
                      android:layout_height="wrap_content"
                      android:layout_alignParentBottom="true"
                      >

            <!-- Row 1, the "extra button row": A couple of relatively rare
                 buttons used only in certain call states.
                 Most of the time this whole row is GONE.
                 For now, at least, there's only ever one button visible here
                 at a time, so this can be a simple FrameLayout. -->
            <FrameLayout android:id="@+id/extraButtonRow"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/dialpad_background"
                android:paddingLeft="@dimen/button_cluster_side_padding"
                android:paddingRight="@dimen/button_cluster_side_padding"
                >
                <!-- The buttons here have a text label floating off to the side
                     (which is necessary because these buttons are used only in
                     a few rare states, and the meaning of the icon might not be
                     obvious.) -->

                <!-- "Manage conference" -->
                <!-- This button is used only on GSM devices, during a conference call. -->
                <LinearLayout android:id="@+id/manageConferenceButtonContainer"
                    android:orientation="horizontal"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    >
                    <ImageButton android:id="@+id/manageConferenceButton"
                        style="@style/InCallButton"
                        android:src="@drawable/ic_manage_holo_dark"
                        android:contentDescription="@string/onscreenManageConferenceText"
                        />
                    <TextView
                        style="@style/InCallExtraRowButtonLabel"
                        android:text="@string/onscreenManageConferenceText"
                        />
                </LinearLayout>

                <!-- CDMA-specific "Merge" -->
                <!-- This button is used only on CDMA devices, where we can't use
                     the Merge button in the main button row (because the "Add Call"
                     button might need to be enabled at the same time.) -->
                <LinearLayout android:id="@+id/cdmaMergeButtonContainer"
                    android:orientation="horizontal"
                    android:layout_width="wrap_content"
                    android:layout_height="wrap_content"
                    >
                    <ImageButton android:id="@+id/cdmaMergeButton"
                        style="@style/InCallButton"
                        android:src="@drawable/ic_merge_holo_dark"
                        android:contentDescription="@string/onscreenMergeCallsText"
                        />
                    <TextView
                        style="@style/InCallExtraRowButtonLabel"
                        android:text="@string/onscreenMergeCallsText"
                        />
                </LinearLayout>

            </FrameLayout>


            <!-- Row 2: The "End call" button. -->
            <!-- This is in its own LinearLayout purely so that the whole row
                 can have a background drawable distinct from the image itself. -->
            <LinearLayout
                android:orientation="horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/end_call_background"
                >
                <ImageButton android:id="@+id/endButton"
                    style="@style/InCallEndButton"
                    android:layout_width="match_parent"
                    android:src="@drawable/ic_end_call"
                    android:contentDescription="@string/onscreenEndCallText"
                    />
            </LinearLayout>

            <!-- Row 3: The main batch of in-call buttons:
                    Dialpad / Audio mode / Mute / Hold / Add call
                 Visible in all states except while an incoming call is
                 ringing. -->
            <LinearLayout
                android:orientation="horizontal"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:background="@drawable/dialpad_background"
                android:paddingLeft="@dimen/button_cluster_side_padding"
                android:paddingRight="@dimen/button_cluster_side_padding"
                >

                <!-- This row has either 4 or 5 buttons, depending on
                     whether the device supports "Hold" (i.e. 4 buttons on
                     CDMA devices, 5 buttons on GSM devices.)  The buttons
                     are interspersed with 'layout_weight="1"' placeholder
                     views so that they'll be spaced evenly in both cases.

                     But note there are a couple of *pairs* of buttons that share a
                     single "slot", namely Hold/Swap and Add/Merge.  For these, the
                     code in InCallTouchUi is responsible for making sure that at any
                     point exactly one of the pair is VISIBLE and the other is
                     GONE. -->

                <View
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

                <!-- "Dialpad" -->
                <!-- This is a "compound button": it has checked and unchecked states. -->
                <ToggleButton android:id="@+id/dialpadButton"
                    style="@style/InCallCompoundButton"
                    android:background="@drawable/btn_compound_dialpad"
                    android:contentDescription="@string/onscreenShowDialpadText"
                    />

                <View
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

                <!-- "Audio": brings up a PopupMenu letting you switch
                     between speaker / bluetooth / earpiece. -->
                <!-- "ic_more_indicator_holo_dark" is the little triangle
                     that indicates that this isn't a plain button, but
                     will instead pop up a menu. -->
                <!-- TODO: it's wrong to set ic_more_indicator_holo_dark
                     as the android:background here, since that overrides
                     the "@drawable/btn_dial" background that comes from
                     the InCallButton style, which means we don't get the
                     "blue background when pressed" effect.  The more
                     indicator probably needs to go into a separate layer
                     somewhere. -->
                <ImageButton android:id="@+id/audioButton"
                    style="@style/InCallButton"
                    android:src="@drawable/ic_sound_holo_dark"
                    android:background="@drawable/ic_more_indicator_holo_dark"
                    android:contentDescription="@string/onscreenAudioText"
                    />

                <View
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

                <!-- "Mute" -->
                <!-- This is a "compound button": it has checked and unchecked states. -->
                <ToggleButton android:id="@+id/muteButton"
                    style="@style/InCallCompoundButton"
                    android:background="@drawable/btn_compound_mute"
                    android:contentDescription="@string/onscreenMuteText"
                    />

                <View
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

                <!-- This slot is either "Hold" or "Swap", depending on
                     the state of the call.   One or the other of these
                     must always be set to GONE. -->
                <!-- "Hold" -->
                <!-- This is a "compound button": it has checked and unchecked states. -->
                <ToggleButton android:id="@+id/holdButton"
                    style="@style/InCallCompoundButton"
                    android:background="@drawable/btn_compound_hold"
                    android:contentDescription="@string/onscreenHoldText"
                    />
                <!-- "Swap" (or "Manage calls" in some CDMA states) -->
                <ImageButton android:id="@+id/swapButton"
                    style="@style/InCallButton"
                    android:src="@drawable/ic_incall_switch_holo_dark"
                    android:contentDescription="@string/onscreenSwapCallsText"
                    />

                <View android:id="@+id/holdSwapSpacer"
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

                <!-- This slot is either "Add" or "Merge", depending on
                     the state of the call.  One or the other of these
                     must always be set to GONE. -->
                <!-- "Add Call" -->
                <ImageButton android:id="@+id/addButton"
                    style="@style/InCallButton"
                    android:src="@drawable/ic_add_contact_holo_dark"
                    android:contentDescription="@string/onscreenAddCallText"
                    />
                <!-- "Merge calls" -->
                <!-- This button is used only on GSM devices, where we know
                     that "Add" and "Merge" are never available at the same time.
                     The "Merge" button for CDMA devices is "cdmaMergeButton" above. -->
                <ImageButton android:id="@+id/mergeButton"
                    style="@style/InCallButton"
                    android:src="@drawable/ic_merge_holo_dark"
                    android:contentDescription="@string/onscreenMergeCallsText"
                    />

                <View
                    android:layout_width="0dp"
                    android:layout_weight="1"
                    android:layout_height="match_parent" />

            </LinearLayout>

        </LinearLayout>

    </RelativeLayout>

</RelativeLayout>
