<?xml version="1.0" encoding="utf-8"?>
<!-- Copyright (C) 2007 The Android Open Source Project

     Licensed under the Apache License, Version 2.0 (the "License");
     you may not use this file except in compliance with the License.
     You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

     Unless required by applicable law or agreed to in writing, software
     distributed under the License is distributed on an "AS IS" BASIS,
     WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
     See the License for the specific language governing permissions and
     limitations under the License.
-->

<!-- In-call state of the Phone UI. -->
<FrameLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:layout_width="fill_parent"
              android:layout_height="fill_parent"
              >

    <!-- Main frame containing all in-call UI elements.
         This is a FrameLayout with 2 children:
           (1) inCallPanel: the main set of in-call UI elements
           (2) manageConferencePanel: the "Manage conference" UI
         Exactly one of these is visible at any given moment.  -->
    <FrameLayout android:id="@+id/mainFrame"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:paddingTop="10dip"
        android:paddingLeft="6dip"
        android:paddingRight="6dip"
        >

        <!-- (1) inCallPanel: the main set of in-call UI elements.
             We update this view's background to indicate the state of the
             current call; see updateInCallPanelBackground(). -->
        <RelativeLayout android:id="@+id/inCallPanel"
                        android:layout_width="fill_parent"
                        android:layout_height="fill_parent"
                        >
            <!-- The "Call Card", which displays info about the currently
                 active phone call(s) on the device.  See call_card.xml. -->
            <com.android.phone.CallCard android:id="@+id/callCard"
                                        android:layout_width="fill_parent"
                                        android:layout_height="fill_parent"
                />
        </RelativeLayout>  <!-- End of inCallPanel -->

         <!-- Contains all OTA-related UI elements for CDMA -->
        <ViewStub android:id="@+id/otaCallCardStub"
                  android:layout="@layout/otacall_card"
                  android:layout_width="fill_parent"
                  android:layout_height="fill_parent"
                  />

    </FrameLayout>  <!-- End of mainFrame -->

    <!-- (2) manageConferencePanel: the "Manage conference" UI.
         This panel is displayed when the user clicks the
         "Manage conference" button while on a conference call. -->
    <RelativeLayout android:id="@+id/manageConferencePanel"
                    android:layout_width="fill_parent"
                    android:layout_height="fill_parent"
                    android:visibility="gone"
                    >
        <!-- This original header (with timer) is currently not being used,
             but may be of use in the future. -->
        <!-- Header, including chronometer and List divider -->
        <Chronometer
            android:id="@+id/manageConferencePanelHeader"
            android:textAppearance="?android:attr/textAppearanceLarge"
            android:textSize="24sp"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:gravity="center_horizontal"
            android:layout_alignParentTop="true"
            android:layout_marginTop="5dip"
            android:layout_marginBottom="5dip"
            android:visibility="gone"/>

        <ImageView
            android:id="@+id/manageConferencePanelDivider"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:src="@android:drawable/divider_horizontal_dark"
            android:scaleType="fitXY"
            android:layout_below="@id/manageConferencePanelHeader"
            android:visibility="gone"/>
        <!-- End of the original header -->

        <!-- New header, based on the list separator in Contacts. -->
        <LinearLayout android:id="@+id/manageConferenceHeader"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:orientation="vertical">

            <TextView
                android:layout_width="fill_parent"
                android:layout_height="wrap_content"
                android:gravity="center_vertical"
                android:background="@android:drawable/dark_header"
                android:textColor="?android:attr/textColorSecondary"
                android:textStyle="bold"
                android:textSize="14sp"
                android:paddingLeft="8dip"
                android:text="@string/menu_manageConference"/>

            <View
                android:layout_width="fill_parent"
                android:layout_height="1dip"
                android:background="?android:attr/listDivider"/>

        </LinearLayout>  <!-- End of new header -->

        <!-- The scrollview wrapper for the list of callers on
             the conference call (in case the list gets too long). -->
        <ScrollView
            android:id="@+id/conferenceList"
            android:layout_width="fill_parent"
            android:layout_height="wrap_content"
            android:layout_below="@id/manageConferenceHeader"
            android:layout_marginTop="8dip"
            android:layout_marginBottom="60dip">

            <!-- The actual list of callers; this embedded LinearLayout
                 required since scrollview only supports a single child. -->
            <LinearLayout
                android:orientation="vertical"
                android:layout_width="fill_parent"
                android:layout_height="wrap_content">

                <!-- A conference can have at most MAX_CALLERS_IN_CONFERENCE (= 5) callers,
                     so just define all those UI elements here. -->

                <!-- Caller 0 -->
                <include
                    layout="@layout/caller_in_conference"
                    android:id="@+id/caller0"/>

                <!-- Caller 1 -->
                <include
                    layout="@layout/caller_in_conference"
                    android:id="@+id/caller1"/>

                <!-- Caller 2 -->
                <include
                    layout="@layout/caller_in_conference"
                    android:id="@+id/caller2"/>

                <!-- Caller 3 -->
                <include
                    layout="@layout/caller_in_conference"
                    android:id="@+id/caller3"/>

                <!-- Caller 4 -->
                <include
                    layout="@layout/caller_in_conference"
                    android:id="@+id/caller4"/>

            </LinearLayout>  <!-- End of "list of callers on conference call" -->

        </ScrollView>  <!-- End of scrolling list wrapper for the linear layout -->

        <!-- The grey footer, background behind the "Back to call" button -->
        <View
            android:layout_width="fill_parent"
            android:layout_height="54dip"
            android:gravity="center_vertical"
            android:layout_alignParentBottom="true"
            android:background="@android:drawable/dark_header"/>

        <!-- The "Back to call" button -->
        <Button android:id="@+id/manage_done"
            style="?android:attr/buttonStyleSmall"
            android:text="@string/caller_manage_manage_done_text"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_alignParentBottom="true"
            android:layout_centerHorizontal="true"
            android:paddingTop="14dip"
            android:paddingBottom="18dip"
            android:paddingLeft="42dip"
            android:paddingRight="42dip"/>

    </RelativeLayout>  <!-- End of manageConferencePanel -->

    <!-- The sliding drawer control containing the DTMF dialpad.
         Note this isn't a child of mainFrame, which ensures that it'll be
         able to use the full width of the screen.  (And a SlidingDrawer
         widget needs to be be a direct child of a FrameLayout anyway.)
         In portrait mode, this is visible; in landscape mode, this is
         just an empty layout.-->
    <include layout="@layout/dtmf_twelve_key_dialer"/>

    <!-- Finally, the "touch lock" overlay, drawn on top of the DTMF
         dialpad (after some delay) to prevent false touches from
         triggering DTMF tones.  (When the overlay is up, you need to
         double-tap the "lock" icon to unlock the dialpad.) -->
    <RelativeLayout android:id="@+id/touchLockOverlay"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        android:visibility="gone"
        android:background="#8000"
        >
        <!-- Layout note: we could use android:layout_centerInParent="true"
             here to center the lock icon exactly in the middle of the screen.
             But it actually looks better to have the lock roughly in the
             middle of the dialpad key area, so instead we position it a
             fixed distance from the bottom of the screen. -->
        <TextView android:id="@+id/touchLockIcon"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:gravity="center"
            android:layout_alignParentBottom="true"
            android:layout_centerHorizontal="true"
            android:layout_marginBottom="70dip"
            android:text="@string/touchLockText"
            android:textAppearance="?android:attr/textAppearanceLarge"
            android:background="@drawable/dialpad_lock"
            />
    </RelativeLayout>

    <!-- In-call onscreen touch controls, used on some platforms. -->
    <!-- TODO: if this widget ends up being totally unused on some platforms,
         then this should probably be a ViewStub. -->
    <com.android.phone.InCallTouchUi
        android:id="@+id/inCallTouchUi"
        android:layout_width="fill_parent"
        android:layout_height="fill_parent"
        />

    <!-- Frame where the provider's badge will be
         inflated. The badge must fit in the available height.
         The badge is displayed for 5s on top of the contact's
         picture.
      -->
    <FrameLayout android:id="@+id/inCallProviderOverlay"
        android:background="@drawable/dialog_bg_calling_via"
        android:layout_width="fill_parent"
        android:layout_height="88dip"
        android:layout_marginTop="8dip"
        android:layout_gravity="top"
        android:visibility="gone">
        <ImageView android:id="@+id/inCallProviderIcon"
            android:layout_width="64dip"
            android:layout_height="fill_parent"
            android:layout_gravity="left"
            android:gravity="center"
            android:clipChildren="true"
            />
        <TextView android:id="@+id/callingVia"
            android:text="@string/calling_via_template"
            android:layout_width="wrap_content"
            android:layout_height="wrap_content"
            android:layout_gravity="center"
            android:gravity="center"
            android:textAppearance="?android:attr/textAppearanceMediumInverse"
            android:lines="2"
            />
    </FrameLayout>

</FrameLayout>
